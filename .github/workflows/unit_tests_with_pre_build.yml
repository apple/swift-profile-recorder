name: Unit tests with pre-build command

on:
  workflow_call:
    inputs:
      linux_5_9_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.9 Swift version matrix job. Defaults to false."
        default: false
      linux_5_9_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux 5.9 Swift version matrix job."
        default: ""
      linux_5_10_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.10 Swift version matrix job. Defaults to true."
        default: true
      linux_5_10_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux 5.10 Swift version matrix job."
        default: ""
      linux_6_0_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.0 Swift version matrix job. Defaults to true."
        default: true
      linux_6_0_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux 6.0 Swift version matrix job."
        default: ""
      linux_6_1_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.1 Swift version matrix job. Defaults to true."
        default: true
      linux_6_1_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux 6.1 Swift version matrix job."
        default: ""
      linux_6_2_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.2 Swift version matrix job. Defaults to true."
        default: true
      linux_6_2_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux 6.2 Swift version matrix job."
        default: ""
      linux_nightly_next_enabled:
        type: boolean
        description: "Boolean to enable the Linux matrix job using the nightly build for the next Swift version. Defaults to true."
        default: true
      linux_nightly_next_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux matrix job using the nightly build for the next Swift version."
        default: ""
      linux_nightly_main_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly main Swift version matrix job. Defaults to true."
        default: true
      linux_nightly_main_arguments_override:
        type: string
        description: "The arguments passed to swift test in the Linux nightly main Swift version matrix job."
        default: ""

      linux_pre_build_command:
        type: string
        description: "Command to run before the main build command on Linux. Defaults to installing libc6-prof on jammy systems."
        default: "if grep -q 'VERSION_CODENAME=jammy' /etc/os-release; then apt-get update -y -q && apt-get install -y -q libc6-prof; fi"

      linux_env_vars:
        type: string
        description: "Environment variables for Linux jobs as JSON (e.g., '{\"DEBUG\":\"1\",\"LOG_LEVEL\":\"info\"}')."
        default: "{}"

jobs:
  construct-matrix:
    name: Construct unit test matrix
    runs-on: ubuntu-latest
    outputs:
      unit-test-matrix: '${{ steps.generate-matrix.outputs.unit-test-matrix }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - id: generate-matrix
        run: |
          # Validate and use JSON environment variables directly
          linux_env_vars_json='${{ inputs.linux_env_vars }}'

          # Validate JSON format
          if ! echo "$linux_env_vars_json" | jq empty 2>/dev/null; then
            echo "Error: linux_env_vars is not valid JSON"
            exit 1
          fi

          # Generate matrix with pre-build command
          echo "unit-test-matrix=$(curl -s --retry 3 https://raw.githubusercontent.com/apple/swift-nio/main/scripts/generate_matrix.sh | MATRIX_LINUX_ENV_VARS_JSON="${linux_env_vars_json}" bash)" >> "$GITHUB_OUTPUT"
        env:
          MATRIX_LINUX_SETUP_COMMAND: "${{ inputs.linux_pre_build_command }} && swift --version"
          MATRIX_LINUX_COMMAND: "swift test"
          MATRIX_LINUX_5_9_ENABLED: ${{ inputs.linux_5_9_enabled }}
          MATRIX_LINUX_5_9_COMMAND_ARGUMENTS: ${{ inputs.linux_5_9_arguments_override }}
          MATRIX_LINUX_5_10_ENABLED: ${{ inputs.linux_5_10_enabled }}
          MATRIX_LINUX_5_10_COMMAND_ARGUMENTS: ${{ inputs.linux_5_10_arguments_override }}
          MATRIX_LINUX_6_0_ENABLED: ${{ inputs.linux_6_0_enabled }}
          MATRIX_LINUX_6_0_COMMAND_ARGUMENTS: ${{ inputs.linux_6_0_arguments_override }}
          MATRIX_LINUX_6_1_ENABLED: ${{ inputs.linux_6_1_enabled }}
          MATRIX_LINUX_6_1_COMMAND_ARGUMENTS: ${{ inputs.linux_6_1_arguments_override }}
          MATRIX_LINUX_6_2_ENABLED: ${{ inputs.linux_6_2_enabled }}
          MATRIX_LINUX_6_2_COMMAND_ARGUMENTS: ${{ inputs.linux_6_2_arguments_override }}
          MATRIX_LINUX_NIGHTLY_NEXT_ENABLED: ${{ inputs.linux_nightly_next_enabled }}
          MATRIX_LINUX_NIGHTLY_NEXT_COMMAND_ARGUMENTS: ${{ inputs.linux_nightly_next_arguments_override }}
          MATRIX_LINUX_NIGHTLY_MAIN_ENABLED: ${{ inputs.linux_nightly_main_enabled }}
          MATRIX_LINUX_NIGHTLY_MAIN_COMMAND_ARGUMENTS: ${{ inputs.linux_nightly_main_arguments_override }}

  unit-tests:
    name: Unit tests
    needs: construct-matrix
    uses: apple/swift-nio/.github/workflows/swift_test_matrix.yml@main
    with:
      name: "Unit tests"
      matrix_string: '${{ needs.construct-matrix.outputs.unit-test-matrix }}'